##!/usr/local/bin/python
# -*- coding: utf-8 -*-

#2016.6.29增加连接数据库异常处理和关闭数据连接
def listDB(db):
	import pypyodbc
	try:
		con = pypyodbc.connect('driver={SQL Server};server=192.168.80.200;port=1433;uid=sa;pwd=tech.0823;database=yshubpm')
		cur = con.cursor()
	except:
		if con:
			con.close()
		sys.stderr.write('Connect to the database failed!')
	else:
		b = cur.execute("select * from " + db)
		for i in b:
			print i

		#关闭连接，释放资源
		cur.close()
		con.close()
	
def queryCheckUserDB(db, fname):
	checkUser = ()
	import pypyodbc
	try:
		con = pypyodbc.connect('driver={SQL Server};server=192.168.80.200;port=1433;uid=sa;pwd=tech.0823;database=yshubpm')
		cur = con.cursor()
	except:
		if con:
			con.close()
		sys.stderr.write('Connect to the database failed!')
	else:
		b = cur.execute("select checkUser from " + db + " WHERE name= '" + fname + "'")
		for i in b:
			checkUser = i
			break

		#关闭连接，释放资源
		cur.close()
		con.close()
#	if len(b.fetchall())>0:
#		checkstate = 1

	return checkUser
		
def queryCheckoutStateDB(db, fname):
	checkUser = ()
	import pypyodbc
	try:
		con = pypyodbc.connect('driver={SQL Server};server=192.168.80.200;port=1433;uid=sa;pwd=tech.0823;database=yshubpm')
		cur = con.cursor()
	except:
		if con:
			con.close()
		sys.stderr.write('Connect to the database failed!')
	else:
		b = cur.execute("select checkStatue from " + db + " WHERE name= '" + fname + "'")
		for i in b:
			checkUser = i
			break

		#关闭连接，释放资源
		cur.close()
		con.close()

	return checkUser

def delDB(db, fname):
	import pypyodbc
	try:
		con = pypyodbc.connect('driver={SQL Server};server=192.168.80.200;port=1433;uid=sa;pwd=tech.0823;database=yshubpm')
		cur = con.cursor()
	except:
		if con:
			con.close()
		sys.stderr.write('Connect to the database failed!')
	else:
		cur.execute("DELETE FROM " + db + " WHERE name= '" + fname + "'")
		cur.commit()
		#关闭连接，释放资源
		cur.close()
		con.close()

	
	
def insertDB(db, fname, fstate, ftype, upUser, fpath, checkState, checkUser,desc):
	import pypyodbc
	try:
		con = pypyodbc.connect('driver={SQL Server};server=192.168.80.200;port=1433;uid=sa;pwd=tech.0823;database=yshubpm')
		cur = con.cursor()
	except:
		if con:
			con.close()
		sys.stderr.write('Connect to the database failed!')
	else:
		#	cur.execute("INSERT INTO " + db + " VALUES('" + materialId + "','" + fname + "','" + fstate + "','" + ftype + "','" + upTime + "','" + upUser + "','" + fpath + "','" + checkState + "','" + checkUser + "')")
		#inst="INSERT INTO " + db  + "(name, statue, type, upTime, upUser, path, checkStatue, checkUser, memo) " + " VALUES('" + fname + "','" + fstate + "','" + ftype + "',GETDATE(),'" + upUser + "','" + fpath + "','" + checkState + "','" + checkUser  + "','" + desc + "')select GETDATE()"
		#print inst
		cur.execute("INSERT INTO " + db  + "(name, statue, type, upTime, upUser, path, checkStatue, checkUser, memo) " + " VALUES('" + fname + "','" + fstate + "','" + ftype + "',GETDATE(),'" + upUser + "','" + fpath + "','" + checkState + "','" + checkUser  + "','" + desc + "')select GETDATE()")
		cur.commit()
		#关闭连接，释放资源
		cur.close()
		con.close()


def setCheckUserUNLLDB(db,fname):
	import pypyodbc
	try:
		con=pypyodbc.connect('driver={SQL Server};server=192.168.80.200;port=1433;uid=sa;pwd=tech.0823;database=yshubpm')
		cur = con.cursor()
	except:
		if con:
			con.close()
		sys.stderr.write('Connect to the database failed!')
	else:
		cur.execute("UPDATE " + db + " SET checkUser = '' WHERE name= '" + fname + "'")
		cur.commit()
		#关闭连接，释放资源
		cur.close()
		con.close()

def insertAssertDB(db,fileName,httpUrl,projectName,seriers,assetOrAnimSQLVal,bigType,procType):
	import pypyodbc
	try:
		con = pypyodbc.connect('driver={SQL Server};server=192.168.80.200;port=1433;uid=sa;pwd=tech.0823;database=yshubpm')
		cur = con.cursor()
	except:
		if con:
			con.close()
		sys.stderr.write('Connect to the database failed!')
	else:
		cur.execute("INSERT INTO " + db  + "(fileName, httpUrl, projectName, seriers, assetOrAnimSQLVal, bigType, procType, upTime) " + " VALUES('" + fileName + "','" + httpUrl + "','" + projectName + "','" + seriers + "','" + assetOrAnimSQLVal + "','" + bigType + "','" + procType + "',GETDATE())")
		cur.commit()
		#关闭连接，释放资源
		cur.close()
		con.close()


def insertAnimationDB(db,fileName,httpUrl,projectName,sc,sh,assetOrAnimSQLVal,bigType,procType):
	import pypyodbc
	try:
		con = pypyodbc.connect('driver={SQL Server};server=192.168.80.200;port=1433;uid=sa;pwd=tech.0823;database=yshubpm')
		cur = con.cursor()
	except:
		if con:
			con.close()
		sys.stderr.write('Connect to the database failed!')
	else:
		cur.execute("INSERT INTO " + db  + "(fileName, httpUrl, projectName, sc, sh, assetOrAnimSQLVal, bigType, procType, upTime) " + " VALUES('" + fileName + "','" + httpUrl + "','" + projectName + "','" + sc + "','" + sh + "','" + assetOrAnimSQLVal + "','" + bigType + "','" + procType  +  "',GETDATE())")
		cur.commit()
		#关闭连接，释放资源
		cur.close()
		con.close()

def delTextureDB(db, fname):
	import pypyodbc
	try:
		con = pypyodbc.connect('driver={SQL Server};server=192.168.80.200;port=1433;uid=sa;pwd=tech.0823;database=yshubpm')
		cur = con.cursor()
	except:
		if con:
			con.close()
		sys.stderr.write('Connect to the database failed!')
	else:
		cur.execute("DELETE FROM " + db + " WHERE fileName= '" + fname + "'")
		cur.commit()
		#关闭连接，释放资源
		cur.close()
		con.close()

def queryDB(db, fname):
	checkUser = ()
	import pypyodbc
	try:
		con = pypyodbc.connect('driver={SQL Server};server=192.168.80.200;port=1433;uid=sa;pwd=tech.0823;database=yshubpm')
		cur = con.cursor()
	except:
		if con:
			con.close()
		sys.stderr.write('Connect to the database failed!')
	else:
		b = cur.execute("select * from " + db + " WHERE name= '" + fname + "'")
		for i in b:
			checkUser = i
			break
		#关闭连接，释放资源
		cur.close()
		con.close()
	
	return checkUser