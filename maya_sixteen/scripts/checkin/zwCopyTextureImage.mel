
proc string GetOverrideAttr(string $layer, string $attr)
{
	if ($layer == `editRenderLayerGlobals -query -currentRenderLayer`)
	{
		return $attr;
	}

	string $buf[] = `editRenderLayerAdjustment -layer $layer -query`;
	int $find = false;
	for ($i=0; $i<size($buf); $i++)
	{
		if ($buf[$i] == $attr)
		{
			$find = true;
			break;
		}
	}
	if (!$find)
	{
		$buf = `listConnections "renderLayerManager.renderLayerId[0]"`;
		$layer = $buf[0];
	}

	$buf = `listConnections -source false -plugs true -connections true $attr`;
	for ($i=1; $i<size($buf); $i+=2)
	{
		if ($buf[$i] == `match ($layer + "[.]adjustments\\[[0-9]+\\][.]plug") $buf[$i]`)
		{
			return (`match ($layer + "[.]adjustments\\[[0-9]+\\]") $buf[$i]` + ".value");
		}
	}

	return $attr;
}

global proc zwCopyTextureImage(string $version, string $args[])
{
	string $OCTV_PROJECTS = `getenv "OCTV_PROJECTS"`;	//production shared folder

	string $nodeType;	// 节点类型，例如：file、brush、imagePlane
	string $attr;		// 节点属性，例如：fileTextureName、leafImage、flowerImage、imageName
	string $destFolder;	// 目标目录
	int $modifyPath;	// 修改贴图路经
	int $errorStop;		// 当出错时error 而不是warning
	int $percentage;	// 进度
	string $exceptFolder;	// 排除的目录
	string $project;
	int $selectionOnly = false;
    string $username=`getenv username`;
	//deal with photo map and final gather map
	if ($version == 2)
	{
		$destFolder = $args[2];
		$destFolder = `zwFullPath $destFolder`;
		string $renderLayers[] = `listConnections "renderLayerManager.renderLayerId"`;
		for ($item in $renderLayers)
		{
			int $renderable = `getAttr ($item + ".renderable")`;
			if ($renderable)
			{
				string $attr = GetOverrideAttr($item, "defaultRenderGlobals.currentRenderer");
				string $renderer = `getAttr $attr`;
				if ($renderer == "mentalRay")
				{
					if (`objExists miDefaultOptions.photonMapFilename`)
					{
						string $attr = GetOverrideAttr($item, "miDefaultOptions.photonMapFilename");
						string $map = `getAttr $attr`;
						if ($map != "")
						{
							if(`filetest -f $map`)
							{
								
								$map = `zwFullPath $map`;
								 $sysrs = `zwSysFile "fcopy" $map $destFolder 0`;
								string $basename = basename($map, "");

								string $destFolder_tmp = `substitute "//octvision.com/CG/Themes" $destFolder "Z:/Themes"`;
								$destFolder_tmp = `substituteAllString $destFolder_tmp "${OCTV_PROJECTS}" "Z:/Themes"`;

								setAttr -type "string" "miDefaultOptions.photonMapFilename" ($destFolder_tmp + "/" + $basename);
								
							}
						}
					}
					if (`objExists miDefaultOptions.finalGatherFilename`)
					{
						string $attr = GetOverrideAttr($item, "miDefaultOptions.finalGatherFilename");
						string $map = `getAttr $attr`;
						if ($map != "")
						{
							if(`filetest -f $map`)
							{
								$map = `zwFullPath $map`;
								$sysrs = `zwSysFile "fcopy" $map $destFolder 0`;
								string $basename = basename($map, "");

								string $destFolder_tmp = `substitute "//octvision.com/CG/Themes" $destFolder "Z:/Themes"`;
								$destFolder_tmp = `substituteAllString $destFolder_tmp "${OCTV_PROJECTS}" "Z:/Themes"`;

								setAttr -type "string" "miDefaultOptions.finalGatherFilename" ($destFolder_tmp + "/" + $basename);
								
							}
						}
					}
				}
			}
		}
		return;
	}

	//deal with vray map
	if ($version == 4)
	{
		$destFolder = $args[2];
		$destFolder = `zwFullPath $destFolder`;
		string $renderLayers[] = `listConnections "renderLayerManager.renderLayerId"`;
		for ($item in $renderLayers)
		{
			int $renderable = `getAttr ($item + ".renderable")`;
			if ($renderable)
			{
				string $attr = GetOverrideAttr($item, "defaultRenderGlobals.currentRenderer");
				string $renderer = `getAttr $attr`;
				if ($renderer == "vray")
				{
					if (`objExists vraySettings.imap_fileName`)
					{
						string $attr = GetOverrideAttr($item, "vraySettings.imap_fileName");
						string $map = `getAttr $attr`;
						if ($map != "")
						{
							if(`filetest -f $map`)
							{
								print ("\ndestFolder:" + $destFolder);
								$map = `zwFullPath $map`;
								$sysrs = `zwSysFile "fcopy" $map $destFolder 0`;
								string $basename = basename($map, "");

								string $destFolder_tmp = `substitute "//octvision.com/CG/Themes" $destFolder "Z:/Themes"`;
								$destFolder_tmp = `substituteAllString $destFolder_tmp "${OCTV_PROJECTS}" "Z:/Themes"`;

								setAttr -type "string" "vraySettings.imap_fileName" ($destFolder_tmp + "/" + $basename);
								
							}
						}
					}
					if (`objExists vraySettings.pmap_file`)
					{
						string $attr = GetOverrideAttr($item, "vraySettings.pmap_file");
						string $map = `getAttr $attr`;
						if ($map != "")
						{
							if(`filetest -f $map`)
							{
								
								$map = `zwFullPath $map`;
								$sysrs = `zwSysFile "fcopy" $map $destFolder 0`;
								string $basename = basename($map, "");

								string $destFolder_tmp = `substitute "//octvision.com/CG/Themes" $destFolder "Z:/Themes"`;
								$destFolder_tmp = `substituteAllString $destFolder_tmp "${OCTV_PROJECTS}" "Z:/Themes"`;

								setAttr -type "string" "vraySettings.pmap_file" ($destFolder_tmp + "/" + $basename);
								
							}
						}
					}
					if (`objExists vraySettings.causticsFile`)
					{
						string $attr = GetOverrideAttr($item, "vraySettings.causticsFile");
						string $map = `getAttr $attr`;
						if ($map != "")
						{
							if(`filetest -f $map`)
							{
								
								$map = `zwFullPath $map`;
								$sysrs = `zwSysFile "fcopy" $map $destFolder 0`;
								string $basename = basename($map, "");

								string $destFolder_tmp = `substitute "//octvision.com/CG/Themes" $destFolder "Z:/Themes"`;
								$destFolder_tmp = `substituteAllString $destFolder_tmp "${OCTV_PROJECTS}" "Z:/Themes"`;

								setAttr -type "string" "vraySettings.causticsFile" ($destFolder_tmp + "/" + $basename);
								
							}
						}
					}
					if (`objExists vraySettings.shr_file_name`)
					{
						string $attr = GetOverrideAttr($item, "vraySettings.shr_file_name");
						string $map = `getAttr $attr`;
						if ($map != "")
						{
							if(`filetest -f $map`)
							{
								
								$map = `zwFullPath $map`;
								$sysrs = `zwSysFile "fcopy" $map $destFolder 0`;
								string $basename = basename($map, "");

								string $destFolder_tmp = `substitute "//octvision.com/CG/Themes" $destFolder "Z:/Themes"`;
								$destFolder_tmp = `substituteAllString $destFolder_tmp "${OCTV_PROJECTS}" "Z:/Themes"`;

								setAttr -type "string" "vraySettings.shr_file_name" ($destFolder_tmp + "/" + $basename);
								
							}
						}
					}
					if (`objExists vraySettings.fileName`)
					{
						string $attr = GetOverrideAttr($item, "vraySettings.fileName");
						string $map = `getAttr $attr`;
						if ($map != "")
						{
							if(`filetest -f $map`)
							{
								
								$map = `zwFullPath $map`;
								$sysrs = `zwSysFile "fcopy" $map $destFolder 0`;
								string $basename = basename($map, "");

								string $destFolder_tmp = `substitute "//octvision.com/CG/Themes" $destFolder "Z:/Themes"`;
								$destFolder_tmp = `substituteAllString $destFolder_tmp "${OCTV_PROJECTS}" "Z:/Themes"`;

								setAttr -type "string" "vraySettings.fileName" ($destFolder_tmp + "/" + $basename);
								
							}
						}
					}
				}
			}
		}
		return;
	}

	if ($version == 3)
	{
		$nodeType	= $args[0];
		$attr		= $args[1];
		$destFolder	= $args[2];
		$modifyPath	= $args[3];
		$errorStop	= $args[4];
		$percentage	= $args[5];
		$project	= $args[6];
		$selectionOnly	= $args[7];



	}
    // add by zhangben 2019 04 23  for new copy mode
    //=============================================================
//    string $deliverArgStr = "doCp = cptxs.CopyTxs(\"fastCopy\",\"$REC_TXS_BY_NODE\",\"$ALL_FILE_NODES\",\"$destFolder\",\"" + $mis_pth_shn + "\")";
    int $newCopyMode = 0;
  	string $all_valid_copys[]; //所有需要copy 的 贴图 存储进，用来判断 多个节点如果有重复贴图就不进行copy
    global string $ALL_FILE_NODES[];
    global string $REC_TXS_BY_NODE[]; // 按节点方式 记录 ：每个node 关联的贴图们 写在一起 为一条 fastCopy 命令的参数
	string $ALL_COPY_FILES_STR; // 只执行一次copy 的模式  把所有要copy的贴图 写入一条 fastcopy
    string $dest_txs_by_node[]; // 把目标贴图存储起来，跟Node 一一对应，用于重新指定 attribute
    clear $ALL_FILE_NODES;
    clear $REC_TXS_BY_NODE;
    if ($version == 3 && $nodeType == "file" && $attr == "fileTextureName")
    {
        string $testUSER[] = {"dengtao"};
        if(`stringArrayCount $username $testUSER`){
            $newCopyMode = 2;
        }
    }
    //==============================================================

	int $batchMode = `about -batch`;

	string $rs, $message, $iff, $all[], $buf2[], $buf4[];

	string $allnoSetNodePath[];
	clear $allnoSetNodePath;

	$destFolder = `zwFullPath $destFolder`;


	if (`match "OCTVRENDERFARM/" $destFolder` != "")	// Netrender
	{
		$exceptFolder = "//*";
	}

	string $nodes[];
	if ($selectionOnly)
	{
		$nodes = `zwTextureNetwork`;
	}
	else
	{
		catch($nodes = `ls -type $nodeType`);
	}
	int $max = `size $nodes`;
	int $progress = 0;
	if ($max && !$batchMode)
		progressWindow -progress $progress -max $max -title "Copy Maps" -status ($progress + "/" + $max) -isInterruptable true;
		if ($newCopyMode){
		   progressWindow -e -title "TIDY ALL TEXTRUES..." -status ($progress + "/" + $max) -isInterruptable true ;
		}
	for ($node in $nodes)
	{
		// add by zhangben for new copy mode
		string $cpFils_;
        string $valid_copys[];
        //==============================================
		if (!$batchMode)
		{
			if (`progressWindow -query -isCancelled `)
			{
				progressWindow -endProgress ;
				error "";
			}
			$progress ++;
			progressWindow -edit -progress $progress -status ($progress + "/" + $max + "\t" + $node) ;
		}

		if (`reference -isNodeReferenced $node`)
		{
			continue;
		}

		string $file = `getAttr ($node + "." + $attr)`;
		if ($file == "")
		{
			continue;
		}

        $ALL_FILE_NODES[size($ALL_FILE_NODES)] = $node;//add for new copy mode 把所有file 节点 存在全局变量 传递给 copy texture  的函数

		$file = `workspace -expandName $file`;

		if (!`filetest -f $file`)
		{
			if ($node == "brush")
			{
				if ($attr == "imageName")
				{
					if (!(`getAttr ($node + ".mapColor")` && `getAttr ($node + ".textureType")` == 4))
					{
						continue;
					}
				}
				if ($attr == "leafImage")
				{
					if (!(`getAttr ($node + ".tubes")` && `getAttr ($node + ".leaves")` && !`getAttr ($node + ".leafUseBranchTex")`))
					{
						continue;
					}
				}
				if ($attr == "flowerImage")
				{
					if (!(`getAttr ($node + ".tubes")` && `getAttr ($node + ".flowers")` && !`getAttr ($node + ".flowerUseBranchTex")`))
					{
						continue;
					}
				}
			}

			$message = "贴图/代理丢失：" + $node + "." + $attr + "\t" + $file;
			if ($errorStop)
			{
				if (!$batchMode)
					progressWindow -endProgress ;
				if ($percentage >= 100 && `nodeType $node` != "VRayMesh")
					error $message;
				else
					warning $message;
			}
			else
			{
				warning $message;
				continue;
			}
		}

		$file = `zwFullPath $file`;
		string $texture = $file;
		
//		print ("\nSourceTEXTURE:" + $texture);

		int $except = false;
		if (`gmatch (tolower($file)) (tolower($exceptFolder))`||`gmatch (tolower($texture)) (tolower($OCTV_PROJECTS  + "/" + $project + "/Project/sourceimages/*"))`||`gmatch (tolower($texture)) (tolower("${OCTV_PROJECTS}/" + $project + "/Project/sourceimages/*"))`)
			$except = true;
		clear $buf4;
		//
		string $filename = `match "[^/\\]+$" $file`;
		string $folder = `substring $file 1 (size($file) - size($filename))`;
		$texture = $destFolder + "/" + $filename;
		//add by zhangben 2019 04 23 for new copy mode
		$dest_txs_by_node[size($dest_txs_by_node)] = $texture;

		if(!$except)	// 需要上传
		{
			$buf4[size($buf4)] = $file;
			if (`attributeExists "useFrameExtension" $node`)
			{
				if (`getAttr ($node + ".useFrameExtension")`)
				{
					string $buf2[] = zwGetSequence($folder + "/" + $filename);
					for ($seq in $buf2)
					{
						$buf4[size($buf4)] = $folder + "/" + $seq;
					}
				}
			}

			if (`attributeExists "uvTilingMode" $node`){

				if(`getAttr ($node + ".uvTilingMode")` == 2 || `getAttr ($node + ".uvTilingMode")` == 3){
					string $path = "//octvision.com/cg/Tech/maya_sixteen/scripts/checkin/zwGetUVSequence.mel";

					eval ("source \"" + $path + "\"");
					
					string $buf3[] = zwGetUVSequence($folder + "/" + $filename);
					for ($seq in $buf3)
					{
						$buf4[size($buf4)] = $folder + "/" + $seq;
					}
					string $buf5[] = zwGetSequence($folder + "/" + $filename);
					for ($seq in $buf5)
					{
						int $f = stringArrayContains($folder + "/" + $seq, $buf4);
						if($f != 1){
							$buf4[size($buf4)] = $folder + "/" + $seq;
						}
					}
				}
			}
			
			//

			$modifyPath = 1;
		}
		else
			$modifyPath = 0;
        
		for ($source in $buf4)
		{
            // add by zhangben 2019 04 23 for new copy mode
			if ($newCopyMode)
			{
                if(`stringArrayCount $source $all_valid_copys`)
                {
                    continue;
                }
                string $filename = `match "[^/\\]+$" $source`;
                string $dest = $destFolder;
                $temp = substituteAllString ($source,"/","\\");
                $tmp_2 = "\"" + $temp + "\"";

                $valid_copys[size($valid_copys)] = $tmp_2;
                $all_valid_copys[size($all_valid_copys)] = $tmp_2;

			}
            // =======================================================
            else
            {
                if (!$batchMode)
                {
                    if (`progressWindow -query -isCancelled `)
                    {
                        progressWindow -endProgress ;
                        error "";
                    }
                }

                if(`stringArrayCount $source $all`)
                    continue;

                $all[size($all)] = $source;

                string $filename = `match "[^/\\]+$" $source`;
                string $dest = $destFolder;
                /*$rs = `zwSysFile "fcopy" $source $dest 0`;

                if ($rs != "")
                {
                    $message = "拷贝文件出错：" + $node + "." + $attr + "\n" + $rs;
                    if ($errorStop)
                    {
                        if (!$batchMode)
                            progressWindow -endProgress;
                        if ($percentage >= 100)
                            error $message;
                        else
                            warning $message;
                    }
                    else
                    {
                        warning $message;
                        continue;
                    }
                }
                else
                    print ($dest + "\n");*/
                while(true){
                    string $rs = "";
                    $rs = `zwSysFile "fcopy" $source $destFolder 0`;
    //			    $rs = `zwSysFile "fcopy" $source $dest 0`;
                    if ($rs != "")
                    {
                        $message = "拷贝文件出错：" + $node + "." + $attr + "\n" + $rs + "\n" + $source + $dest+ "请检查网络？";
                        if ($errorStop)
                        {
                            if (!$batchMode)
                                progressWindow -endProgress ;
                            if ($percentage >= 100){
                                error $message;
                                break;
                            }else{
                               string $result=`confirmDialog -title "警告" -message $message -button "Continue" -button "stop"`;
                                if($result=="stop"){
                                    error $message;
                                    break;
                                }
                                //warning $message;
                            }
                        }
                        else
                        {
                            string $result=`confirmDialog -title "警告" -message $message -button "Continue" -button "stop"`;
                            if($result=="stop"){
                                 error $message;
                                 break;
                            }
                            //warning $message;
                            //continue;
                        }
                    }
                    else{
                       print ($dest + "\n");
                       break;
                    }
                 }
             }
			if(!$newCopyMode){
			    pause -sec 3;
			}
		}

        // add by zhangben 2019 04 23 for new copy mode
        $cpFils_ = stringArrayToString($valid_copys," ");
        if ($newCopyMode)
        {
            $ALL_COPY_FILES_STR += ($cpFils_ + " ");
            $REC_TXS_BY_NODE[size($REC_TXS_BY_NODE)] = $cpFils_;
            continue;
        }
        // =======================================================
		string $sourceUrl = `getAttr ($node + "." + $attr)`;
		$sourceUrl = `substituteAllString $sourceUrl "\\" "/"`;
		string $destUrl = $texture;
	
		//if ($modifyPath && `filetest -f $texture` && tolower($sourceUrl) != tolower($destUrl))

		//2015.6.5
		/*if (`filetest -f $texture`)
		{
				print("node:"+$node);
				print("seting:"+$destUrl+"\n");

				setAttr ($node + "." + $attr) -type "string" $destUrl;
		}*/

		//2016.12.14
		if($modifyPath && `filetest -f $texture`){

			$destUrl = `zwFullPath $destUrl`;
			string $destUrl_tmp = `substitute "//octvision.com/CG/Themes" $destUrl "Z:/Themes"`;
			$destUrl_tmp = `substituteAllString $destUrl_tmp "${OCTV_PROJECTS}" "Z:/Themes"`;
			
			setAttr ($node + "." + $attr) -type "string" $destUrl_tmp;

		}else if($modifyPath && (!`filetest -f $texture`)){
			$allnoSetNodePath[size($allnoSetNodePath)] = $node;
			$allnoSetNodePath[size($allnoSetNodePath)] = $attr;
			$allnoSetNodePath[size($allnoSetNodePath)] = $destUrl;
		}

	}
	//======================add by zhangben 2019 04 23 for new copy mode
	if($newCopyMode)
	{
        progressWindow -endProgress ;
        if ($newCopyMode == 2)
        {
            python("import OCT_generel.CopyTxs as cptxs\nreload(cptxs)");
            string $mis_pth_shn = `file -q -sn -shn`;
            string $deliverArgStr = "doCp = cptxs.CopyTxs(\"fastCopy\",\"$ALL_FILE_NODES\",\"$REC_TXS_BY_NODE\",\"" + $destFolder + "\",\"" + $mis_pth_shn + "\")";
            python($deliverArgStr);
            python("doCp.copytxs()");

        }

        if ($rs != "")
        {
            $message = "拷贝文件出错：请检查网络？";
            if ($errorStop)
            {
                if (!$batchMode)
                    progressWindow -endProgress ;
                if ($percentage >= 100){
                    error $message;
                }else{
                   string $result=`confirmDialog -title "警告" -message $message -button "Continue" -button "stop"`;
                    if($result=="stop"){
                        error $message;
                    }
                    //warning $message;
                }
            }
            else
            {
                string $result=`confirmDialog -title "警告" -message $message -button "Continue" -button "stop"`;
                if($result=="stop"){
                     error $message;
                }
                //warning $message;
                //continue;
            }
        }
        else{
           print ($destFolder + "\n");
        }


        for ($n=0;$n<size($ALL_FILE_NODES);$n++)
        {
//            pause -sec 3;
            $node = $ALL_FILE_NODES[$n];
            $texture = $dest_txs_by_node[$n];
            string $sourceUrl = `getAttr ($node + "." + $attr)`;
            $sourceUrl = `substituteAllString $sourceUrl "\\" "/"`;
            string $destUrl = $texture;
//            print("\nSET TEXTURE PATH:\n");
//            print("\nNODE NAME : " + $node + "\n");
//            print("\nTEXTURE   : " + $texture + "\n");
//            print("\nMODIFYPATH: " + $modifyPath + "\n");

            //2016.12.14
            if($modifyPath && `filetest -f $texture`){
//                print("ENTER FIRSTTIME SETATTRIBUTE\n");
                $destUrl = `zwFullPath $destUrl`;
                string $destUrl_tmp = `substitute "//octvision.com/CG/Themes" $destUrl "Z:/Themes"`;
                $destUrl_tmp = `substituteAllString $destUrl_tmp "${OCTV_PROJECTS}" "Z:/Themes"`;
                setAttr ($node + "." + $attr) -type "string" $destUrl_tmp;


            }else if($modifyPath && (!`filetest -f $texture`)){
//                print("FISRT TIME SET TEXTURE FAILED\n");
                $allnoSetNodePath[size($allnoSetNodePath)] = $node;
                $allnoSetNodePath[size($allnoSetNodePath)] = $attr;
                $allnoSetNodePath[size($allnoSetNodePath)] = $destUrl;
            }
        }

	}
//	===================================================================
	string $allNodePath[];
	string $tempNode[];
	clear $allNodePath;
	clear $tempNode;
	$allNodePath=$allnoSetNodePath;

	string $infos = "";
	string $message = "";
	while(size($allNodePath)>0)
	{
		$infos = "";
		for($i=0; $i<size($allNodePath); $i = $i+3){
			if(`filetest -f $allNodePath[$i+2]`){

				$dest_t = `zwFullPath $allNodePath[$i+2]`;
				string $destPath_tmp = `substitute "//octvision.com/CG/Themes" $dest_t "Z:/Themes"`;
				$destPath_tmp = `substituteAllString $destPath_tmp "${OCTV_PROJECTS}" "Z:/Themes"`;
				setAttr ($allNodePath[$i] + "." + $allNodePath[$i+1]) -type "string" $destPath_tmp;
				print("\nNODE: "+$allNodePath[$i]);
				print("\nATTR:"+$allNodePath[$i+2]);
				print("\nPATH:"+$destPath_tmp + "\n");
			}else{
				$tempNode[size($tempNode)] = $allNodePath[$i];
				$tempNode[size($tempNode)] = $allNodePath[$i+1];
				$tempNode[size($tempNode)] = $allNodePath[$i+2];
				$infos = $infos + $allNodePath[$i]+"."+$allNodePath[$i+1]+"\n贴图"+$allNodePath[$i+2]+"\n";
			}
		}
		if($infos!= ""){
			$message = "设置贴图出错：" + $infos +"请检查贴图是否存在或网络是否正常？";
			string $result=`confirmDialog -title "警告" -message $message -button "Continue" -button "stop"`;
		    if($result=="stop"){
		        progressWindow -endProgress ;
		        error $message;
		        break;
		    }
		}
		clear $allNodePath;
		$allNodePath = $tempNode;
		clear $tempNode;
	}
	
	if ($max && !$batchMode)
		progressWindow -endProgress ;
}

